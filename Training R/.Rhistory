c(1,3,2,5)
x = c(1,3,5)
x+y
x= c(1,3,5)
x
y= c(1,8,4)
x+y
length(x)
x= c(1,3,5)
x
y= c(1,8,4)
x+y
length(x)
x= c(1,3,5)
x
y= c(1,8,4)
x+y
length(x)
clear
clean
ls()
rm(x,y)
ls()
rm(lists = ls()
rm(lists = ls()))
rm(lists = ls())
mtx = matrix(data = x, nrow = 2 ,ncol = 2 )
x= c(1,3,5,8)
x
y= c(1,8,4,12)
x+y
length(x)
ls()
mtx = matrix(data = x, nrow = 2 ,ncol = 2 )
mtx = matrix(data = x, nrow = 2 ,ncol = 2 )
x
x
mtx
length(x)
sqrt(x)
seq(1,10)
x = rnorm(50)
rn
rn = rnorm(50)
rn
##variables with a mean of 0 and a standard
##deviation of 1. we can alter the mean and the std
rnr = rnorm(50, mean = 50, ds = .1)
##variables with a mean of 0 and a standard
##deviation of 1. we can alter the mean and the std
rnr = rnorm(50, mean = 50, sd = .1)
##variables with a mean of 0 and a standard
##deviation of 1. we can alter the mean and the std
rnr = rnorm(50, mean = 50, sd = .1)
rnr
cor(x,y)
rm(lists = ls())
ls()
rm(list = ls())
x= c(1,3,5,8)
y= c(1,8,4,12)
x+y
length(x)
ls() ##list of all of the objects that we saved so far
mtx = matrix(data = x, nrow = 2 ,ncol = 2 )
sqrt(mtx)
seq(1,10)##makes a vector of integers between a and b.
rn = rnorm(50)##generates 50 tandard normal random
##variables with a mean of 0 and a standard
##deviation of 1. we can alter the mean and the std
rnr = rnorm(50, mean = 50, sd = .1)
cor(x,y)
set.seed(3).
set.seed(3)
y = rnorm(100)
mean(y)
mean(y3)
mean(y3)
y3 = rnorm(100)
mean(y3)
mean(y3)
var(y)
y = rnorm(100)
mean(y)
var(y)
sqrt(var(y))
sd(y)
x
a = matrix(1:16, 4, 4)
a
##create a 4x4 matrix containing 1 to 16
a
a[2,3]
a[c(1,2), c(2,4)]
a[c(1,3), c(2,4)]
a[1:2,]
rx = rnorm(100)
ry = rnorm(100)
plot(rx,ry)
plot(rx,ry, col ="green", xlab = "This is the X axis",ylab="this is the y-axis",main="Plot of X vs Y" )
data = read.table("DataAssign2.csv")
summary(data)
?
?rm
rm
rm()
summary(data)
names(data)
data = read.table("DataAssign2.csv.data")
data = read.table("DataAssign2.csv")
summary(data)
data = read.table("DataAssign2.csv", header = T, na.strings = ="?")
data = read.table("DataAssign2.csv",header=T,na.strings ="?")
summary(data)
pairs(data)
names(data)
contrasts(data$V2)
factor(data$v2)
contrasts(data$V2)
install.packages("mltools")
library(mltools)
data = read.table("DataAssign2.csv",header=T,na.strings ="?")
summary(data)
names(data)
newdata = one_hot(as.data.table(data))
newdata <- one_hot(as.data.table(data))
install.packages("data.table")
newdata = one_hot(data.table::as.data.table(data))
data = read.table("DataAssign2.csv",header=T,na.strings ="?")
install.packages("mltools")
install.packages("Rtools")
